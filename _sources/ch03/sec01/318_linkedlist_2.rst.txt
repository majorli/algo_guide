链表的C++实现
+++++++++++++

本节我们将使用C++语言实现单链表和双链表结构。作为数据结构这一领域的学习，我们将使用C++模板技术实现标准的链表ADT，可以接受任意类型的元素，具有以下标准功能：

1. 基本功能：

   1. 获取链表长度，即表中元素的数量；
   2. 判断链表是否为空；
   3. 清空链表。

2. 迭代访问：

   1. 获取链表首元素节点的指针，请注意是首元素的节点，不是头部的哑节点指针；
   2. 获取双链表的尾部指针，请注意是尾部的哑节点指针，不是尾元素的节点指针；
   3. 向后移动节点指针；
   4. 向前移动双链表节点指针。

3. 元素访问：

   1. 按照元素下标获取元素值；
   2. 根据节点指针获取元素值；
   3. 获取链表首元素；
   4. 获取双链表尾元素；
   5. 修改指定下标处的元素值；
   6. 修改给定节点（由指针给定）处的元素值。

4. 元素增删：

   1. 在链表头部插入新元素；
   2. 在双链表尾部添加新元素；
   3. 新元素插入为单链表给定节点（由指针给定）的后继；
   4. 新元素插入为双链表给定节点（由指针给定）的前驱，类似于顺序表中在指定元素位置处插入新元素；
   5. 删除链表首元素；
   6. 删除双链表的尾元素；
   7. 删除单链表给定节点（由指针给定）的后继；
   8. 删除双链表给定节点（由指针给定）本身。

以上是链表的常见标准功能，在学习数据结构时应全部予以掌握，在实际编程中可能会有所取舍或改变。本节详细介绍单链表的完整实现代码，双链表只给出部分代码，剩余部分将作为本节的练习。

单链表的实现
^^^^^^^^^^^^

**1、单链表的元素节点结构**



双链表的实现
^^^^^^^^^^^^

(待续)

