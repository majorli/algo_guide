.. index:: 尺取法

尺取法（洛谷P1147）
+++++++++++++++++++

:strong:`尺取法`又叫\ :strong:`双指针法`，它其实也是一种模拟，是解决寻找区间和问题的一种方法。

顾名思义，尺取法就是像尺子一样取一段来进行测量。尺取法通常是使用一对下标，表示所测量的区间的左右端点，然后根据测量结果不断地推进区间左右端点以找到答案。尺取法比直接暴力枚举区间效率高很多，尤其是数据量大的时候，所以说尺取法是一种高效的枚举区间的方法，是一种技巧，一般用于求取有特定区间和的所有子区间或最短的子区间等等。

比如要在一个项数为 :math:`n` 的数列中寻找所有区间和等于 :math:`s` 的子区间，如果用朴素的暴力枚举子区间的话，我们需要用一个双层嵌套循环，分别循环枚举所有可能的子区间左右端点，在这个嵌套循环内部很可能还需要用一个单循环来计算出区间和：

.. code-block:: c++

   for (int l = 0; l < n; l++) {
           for (int r = l; r < n; r++) {
                   // 计算区间[l, r]的区间和
           }
   }

这样的方法时间复杂度至少为 :math:`O(n^2)`。但是用尺取法可以把时间复杂度降低到恰为 :math:`O(n)`。

当然任何技巧都存在其不足的地方，有些情况下尺取法不可行，无法得出正确答案，所以要先判断是否可以使用尺取法再进行计算。尺取法的条件就是区间和的变化是有规律的，通常要求是单调的，否则当一个子区间的测量结果出来后，我们就无从判断下一步是应该怎样移动尺子的端点。最为常见的这种数列就是全正项数列（或者全负项数列），这里我们用全正项数列为例来进行说明。

设有正项数列 :math:`\{a_n\}`，那么对于任意的左右下标 :math:`1\le l\le r\le n` 表示的子区间 :math:`[l,r]`，记它的区间和为 :math:`s[l,r]=\sum_{i=l}^ra_i`。那么当尺的两端向右移动的时候，我们可以确定，新的区间和有以下规律：

1. 左端向右移动，右端不变，区间和缩小：:math:`s[l,r] \gt s[l+1,r]`。
2. 右端向左移动，左端不变，区间和扩大：:math:`s[l,r] \lt s[l,r+1]`。

利用上述两条规律，我们可以设计出一种技巧，从左向右单方向地移动尺子，直到尺的左端移到数列末端的后面，可以找出区间和为指定的 :math:`s` 值的所有子区间。

.. hint::

   类似地我们容易发现另外两条规律：:math:`s[l,r] \gt s[l,r-1]`，:math:`s[l,r] \lt s[l-1,r]`。利用这两条规律也可以实现尺子从右向左探测的技巧，但是一般来说，对于大多数不是左撇子的人，从左向右移动尺子更加符合直观，容易理解。

* 初始时，让尺子的左右两个端点都指向数列的首项 :math:`a_1`，表示只含一个首项的区间 :math:`[1,1]`，这是整个尺取探测过程的起点。
* 假设某个子区间 :math:`[l,r]` 的区间和 :math:`s[l,r] \gt s`，说明从 :math:`a_l` 开始的子区间不需要再扩大长度了，它的区间和已经过大了。所以我们下一步不需要再探测这一类子区间，而应该改为去探测从 :math:`a_{l+1}` 开始的子区间了。于是我们向右移动左端点：:math:`l\leftarrow l+1`。
* 假设某个子区间 :math:`[l,r]` 的区间和 :math:`s[l,r] = s`，说明它就是一个我们要找的子区间。由于正项数列中没有小于等于零的项，所以我们下一步不需要再探测从 :math:`a_l` 开始的子区间，而应该改为去探测从 :math:`a_{l+1}` 开始的子区间了。于是我们记录下（或者输出）这个结果，然后向右移动左端点：:math:`l\leftarrow l+1`。
* 假设某个子区间 :math:`[l,r]` 的区间和 :math:`s[l,r] \lt s`，说明从 :math:`a_l` 开始的子区间还不够大。所以我们下一步要继续探测这一类子区间。于是我们向右移动右端点：:math:`r\leftarrow r+1`。
* 尺子的右端点一定先于左端点抵达数列的尾项，此后当尺子的左端点移动到某个位置 :math:`l^\prime` 使得 :math:`s[l^\prime,n] \lt s` 时，整个尺取探测过程结束。

.. attention::

   有时候有些特定的问题（比如后面我们要讲解的洛谷P1147）会有一些不同的结束条件，或许有一些别的特殊要求，比如洛谷P1147还规定了子区间长度大于1。但是三个判断下一步该如何移动尺子的方法都是一样的。

举个例子，正项数列 :math:`\{a_n\}=[2,1,3,5,1,6]` 一共有6项，为了找出其中区间和为6的所有子区间，我们要做以下的尺取探测过程：

（TODO）

用数组 ``data`` （从0号元素开始存放数列中的各项）来表示一个数列，数列的总项数和要找的区间和分别存放在变量 ``int n, s`` 中，用变量 ``int l, r`` 分别表示尺的左右两端，区间和存放在变量 ``sum`` 中。一个在正项数列中探测所有具有特定区间和的子区间的示例程序如下：

（TODO）


.. index:: 【连续自然数和】, 〖洛谷P1147〗

尺取法：连续自然数和（洛谷P1147）

（待续）