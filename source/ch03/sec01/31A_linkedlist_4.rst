链表的应用（续）
++++++++++++++++

链表的优势在于快速地插入和删除元素，它不光能在链上任意一个环节处以常数时间插入或删除单个元素节点，而且能以同样的常数时间插入或删除整段元素，因此非常适合多个链表之间的分段合并、拼接等操作。

两个有序单链表的归并
^^^^^^^^^^^^^^^^^^^^

前一节说过，链表天生不适合归并排序。但是链表非常适合两个有序表的归并操作，虽然时间复杂度仍然为 :math:`O(n)`\ ，但是实际运行的效果要比顺序表的归并快许多。而且和顺序表归并不同，链表可以直接将一个表的元素归并入另一个表，也就是可以实现原地归并，不需要另外开辟一张临时表。这得益于链表方便的成段拼接能力。

下面仍然以单链表为例，介绍如何实现两个有序单链表的归并。设有两个有序整数序列 :math:`A,B` 保存在两个单链表中，先假设二者的长度都不为零，现在要将 :math:`B` 中的所有元素归并入 :math:`A`\ 。



单链表实现基数排序
^^^^^^^^^^^^^^^^^^

