二叉树(II) 遍历
++++++++++++++++

一个数据结构最重要的操作就是要能够访问存储在其中的数据。二叉树不是线性数据结构，很难像线性表一样通过一个位置值来访问到某一个特定的节点，要指定一个节点在二叉树中的所在位置，一般需要用一条路径，比如左左右左右这样的。这样就比较麻烦了，所以一般对树（或者森林、网、图这样的非线性数据结构）中元素的访问，多采用\ :strong:`遍历`\ （traversal）的方法，即按照某种\ :strong:`确定的规则`\ ，沿一条\ :strong:`途径所有节点`\ 且\ :strong:`不重复`\ 的路线\ :strong:`完整地`\ 游历整棵树，从而\ :strong:`依次`\ 访问到所有的数据项。遍历的规则也叫做遍历的\ :strong:`序`\ ，不同序的遍历，访问元素的顺序就不同。

二叉树有四种常见的遍历序：先序（pre-order）、中序（in-order）、后续（post-order）和层序（layer-order），其中层序遍历又分为从左到右和从右到左两种。而先中后三种序的遍历则是数据结构和算法中最重要最基础的知识之一，需要熟练掌握。

先序、中序和后续遍历
^^^^^^^^^^^^^^^^^^^^


层序遍历
^^^^^^^^

