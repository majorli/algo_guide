STL容器：集合
+++++++++++++

回顾前面的内容，我们学习了哈希表这种特殊的数据表，它具有能够以接近常数时间的效率进行元素增删查改的优秀性能，但是它对元素的类型有一定的要求，即要求元素是所谓的键值对形式的数据项，其中键这个部分要求是唯一的，不同的数据项必须有不同的键。在实际的算法问题编程中，很少遇见需要自己编写一个哈希表的情况，但是经常会用到集合和映射这两种数据结构，它们往往是基于哈希表来实现的。前面我们也已经说过，如果哈希表中保存的数据项是键值合一的，那么就相当于一个集合，如果是键值分开的，那么就相当于一个映射。

C++和Java等其他现代高级语言一般都会提供多种集合和映射容器，其中一定会有一些是基于哈希表技术来实现的，比如Java的 ``HashSet`` 和 ``HashMap`` 就是。算法竞赛所使用的C++98，其STL库也提供了集合 ``set`` 和映射 ``map`` 两种容器，它们是基于二叉检索树技术的，因此能够让容器中的元素根据键值大小保持有序，但是增删查的效率略微低一点。C++11标准开始增加了无序集合 ``unordered_set`` 和无序映射 ``unordered_map`` 容器，它们是基于哈希表来实现的，时间效率就高了，但可惜目前很多信息学算法竞赛不支持使用C++11标准。另外，C++的STL容器还提供了键值可重复的集合和映射容器，分别是 ``multiset`` 和 ``multimap``\ ，C++11开始同样地为无序集合和无序映射提供了键值可重复的版本 ``unordered_multiset`` 和 ``unordered_multimap``\ 。

本节我们将对STL的集合容器的使用方法进行介绍，下一节介绍映射容器。

集合的基本概念
^^^^^^^^^^^^^^

集合本身是一个数学概念，是现代数学的基石。数学上所述的集合概念非常简单，就是一系列互不相等的元素所构成的一个整体。数学的集合有以下几个性质：

1. 元素的类型可以多种多样，并不一定需要是同类型的。比如数字和几何图形也可以是同一个集合中的元素，只要是某种具体的东西都可以放进任何集合里去。
2. 元素的数量没有任何要求，最少可以是0个（空集），可以是有限个，比如10以内自然数的集合，也可以是无限个，比如一条线段上所有点的集合。
3. 元素的顺序没有任何规定，比如 {1,2,3} 和 {3,2,1} 是相同的集合，和它们的元素排列顺序没有关系。

编程语言提供的集合容器，会尽量地模拟数学上的集合概念，但是终究会有所不同。最显而易见的不同就是受到计算机存储空间的限制，不可能真正实现无限集合。根据实现技术的不同，有些集合容器会确保元素之间保持一定的顺序，例如C++的 ``set`` 容器会利用元素之间的小于比较运算来确保元素按照大小关系从小到大存放，Java的 ``LinkedSet`` 容器会保证元素按照添加入表的顺序来存放。有些则不会，例如C++11的 ``unordered_set`` 和Java的 ``HashSet`` 容器就不保证元素之间的任何存放顺序，因为它们都是基于哈希表来实现的集合。

编程语言提供的集合容器对于元素的数据类型也是多少有一点限制的。例如C++的 ``set`` 容器，在定义的时候要求指定一个数据类型，以后放入集合中的元素就必须是这种类型的，并不是数学上集合概念所说的完全没有任何限制，Java的集合容器也是一样。在算法编程中，这样的限制并不会带来太多麻烦，一般算法编程不会遇到要把不同类型数据放在一个集合里去的情况。

.. admonition:: 补充

   但是工程性质的软件开发时就不一样了，不同类型数据希望放在一个集合里去的情况时有发生，这时候就需要用到面向对象编程技术来解决问题。C++、Java和其他绝大多数现代编程语言都支持面向对象的编程技术，通过类型之间的继承关系，可以使用一个公共的父类型（也叫基类）来定义容器，然后所有继承自这个公共基类的子类型就都可以放进去了。

   例如最经典的解决方案来自Java语言，Java有一个理念叫做Everything is object，万物皆对象。在Java语言中预先定义了一个最基础的基类叫做 ``Object``\ ，所有其他任何类型都继承自它，都是它的子子孙孙，因此就叫做 Everything is object。在Java的世界里已经消灭了“你是不是东西？”这个千古难题，只剩下“你是个什么东西？”这个问题了。正因为如此，我们可以这样定义一个允许放进去任何东西的集合：

   .. code-block:: java

      HashSet<Object> h = new HashSet<Object>();

   C++虽然没有Java这么做得彻底，并没有一个最基础的基类，但是并不妨碍我们自己定义一个呀。如果使用C++的面向对象编程，我们完全可以自己定义一个类似这样的基类。当然了，这是面向对象的编程技术，在学习算法编程时我们不去学它，作为补充知识有所了解就可以了。

STL集合容器
^^^^^^^^^^^^

前面已经说过，STL的集合容器总共有四种：\ ``set``\ 、\ ``multiset``\ 、\ ``unordered_set`` 和 ``unordered_multiset``\ 。实际上，所有四种容器在使用上几乎完全相同。下面我们首先看最基础的 ``set`` 容器。


