贪心法
======

:strong:`贪心法`指的是求解最优化问题的一种方法，它不从整体最优上考虑如何解决问题，而是把求解过程分为多个相对简单的子过程或步骤，每一步都总是做出\ :strong:`当下最好`\ 的选择，即求出所谓\ :strong:`局部最优解`，最后通过这些局部最优解来得到整体的\ :strong:`全局最优解`。

.. hint::

   贪心法是动态规划的一种特例。能用贪心解决的问题，也可以用动态规划解决。


贪心法使用的分解求解过程的方法叫做\ :strong:`贪心策略`。如果使用的贪心策略具有最优子结构的特点，也就是说它具备\ :strong:`无后效性`，即每一步局部最优解的求解都只和问题的当前状态有关，而不会受到后续求解过程的影响，那么最终就可以得到全局最优解。如果所使用的贪心策略具有后效性，那么算法就可能得不到最优解，而只能得到一个近似最优的解。

.. warning::

   :strong:`贪心法不保证一定能获得最优解！`


所以对所采用的贪心策略一定要仔细分析其是否满足无后效性，换句话说，一定要证明其正确性。但这不是一件容易的事情，并没有一种固定的证明方法，需要具体问题具体分析。而且实际上，:strong:`适用贪心法的情况很少`。一般来说，要分析一个问题是否适用贪心法，一靠经验、二靠尝试举反例、三才是形式化的证明。

下面我们来看一些经典的贪心法案例和反例，最后通过几个实际题目来巩固贪心法的应用。

.. toctree::
   :maxdepth: 2

   sec01/411_greedy_samples_1