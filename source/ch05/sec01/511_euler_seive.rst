.. _ref_511:

欧拉线性筛和互质对
++++++++++++++++++


欧拉线性筛
^^^^^^^^^^

在基础算法部分我们已经学习过怎么利用埃氏筛法来打出一张指定范围内的质数表。我们也提到过，埃氏筛法虽然已经快到足以满足绝大多数的题目要求，但是如果数据范围极其残暴而且程序其他部分还有非常耗时的复杂算法时，有可能还是会不够快。这种时候需要用一种称为 *欧拉线性筛* 或简称为 *欧拉筛*、*线性筛* 的 :math:`O(n)` 算法来打质数表。

这种算法为什么能比埃氏筛更加高效以至于能达到线性时间效率呢？秘密就在于欧拉巧妙地颠倒了内外两层循环，因此就可以设法保证每一个合数只会被它的最小质因数晒掉。为了直观理解，我们用筛选20以内质数的过程来具体看一看。现在我们需要从2到20这一组整数中先后筛掉4,6,8,9,10,12,14,15,16,18,20这11个合数，留下2,3,5,7,11,13,17,19这8个质数。

先来回顾埃氏筛子的做法。埃氏筛子利用两层循环来完成筛选。外层循环是从小到大的已知质数，从2开始，直到某个数的平方超过20；内存循环则是从2开始逐一递增的正整数，就是每次筛选时的倍数。所以用埃氏筛子进行筛选，依次会晒掉以下这些数：

=========== ====== ===============================
外循环轮次  质数   被筛除的合数
=========== ====== ===============================
1           2      4, 6, 8, 10, 12, 14, 16, 18, 20
2           3      *6*, 9, *12*, 15, *18*
3           5      5的平方大于20，筛选结束
=========== ====== ===============================

可以看到，在第二轮用质数3进行筛选的时候，我们实际上重复筛了三个数：6、12和18。原因在于它们都有比3更小的质因数2，而外循环是按照质数从小到大的顺序进行的。这就是埃筛达不到线性时间效率的原因。

下面我们来看欧拉线性筛是怎么操作的。我们如果能按下面这个顺序来进行筛选，就不会出现重复：

==== ====================
倍数 合数
==== ====================
2    4
3    6, 9
4    8, 但不筛掉3的4倍12
5    10, 15
6    12, 但不筛掉3的6倍18
7    14
8    16
9    18
10   20
==== ====================

要实现这个顺序有两个关键点：一是以倍数从小到大为外层循环，以已知质数从小到大为内层循环；二是确保每一个合数都被它的最小的那个质因数筛掉，例如18，它在第9轮外循环以2的9倍这个身份被筛，而不是在第6轮以3的6倍的身份被筛掉。要怎样才能做到这两点呢？第一点好办，第二点就很微妙了，先来看代码。





欧拉函数
^^^^^^^^